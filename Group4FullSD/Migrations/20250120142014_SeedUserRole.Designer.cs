// <auto-generated />
using System;
using Group4FullSD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Group4FullSD.Migrations
{
    [DbContext(typeof(Group4FullSDContext))]
    [Migration("20250120142014_SeedUserRole")]
    partial class SeedUserRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Group4FullSD.Data.Group4FullSDUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Group4FullSD.Domain.Adopter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adoption_History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Of_Birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registration_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Adopter");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Maple Street, Springfield",
                            Adoption_History = "Adopted 2 pets in the past",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8765),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8766),
                            Date_Of_Birth = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "johndoe@example.com",
                            Name = "John Doe",
                            Phone_Number = "1234567890",
                            Registration_Date = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Avenue, Metropolis",
                            Adoption_History = "First-time adopter",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8770),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8770),
                            Date_Of_Birth = new DateTime(1985, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "janesmith@example.com",
                            Name = "Jane Smith",
                            Phone_Number = "9876543210",
                            Registration_Date = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine Road, Gotham",
                            Adoption_History = "Adopted 1 pet last year",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8773),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8774),
                            Date_Of_Birth = new DateTime(1995, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alicejohnson@example.com",
                            Name = "Alice Johnson",
                            Phone_Number = "1122334455",
                            Registration_Date = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Group4FullSD.Domain.AdoptionApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdopterId")
                        .HasColumnType("int");

                    b.Property<int>("Adopter_ID")
                        .HasColumnType("int");

                    b.Property<string>("Application_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Approval_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("Pet_ID")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewedById")
                        .HasColumnType("int");

                    b.Property<int>("Staff_Reviewed_By")
                        .HasColumnType("int");

                    b.Property<DateTime>("Submission_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdopterId");

                    b.HasIndex("PetId");

                    b.HasIndex("ReviewedById");

                    b.ToTable("AdoptionApplication");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adopter_ID = 1,
                            Application_Status = "Approved",
                            Approval_Date = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9557),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9558),
                            Pet_ID = 1,
                            Staff_Reviewed_By = 1,
                            Submission_Date = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Adopter_ID = 2,
                            Application_Status = "Pending",
                            Approval_Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9562),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9562),
                            Pet_ID = 2,
                            Staff_Reviewed_By = 2,
                            Submission_Date = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Adopter_ID = 3,
                            Application_Status = "Rejected",
                            Approval_Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9565),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9565),
                            Pet_ID = 3,
                            Staff_Reviewed_By = 3,
                            Submission_Date = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Group4FullSD.Domain.AdoptionPreferenceSurvey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdopterId")
                        .HasColumnType("int");

                    b.Property<int>("Adopter_ID")
                        .HasColumnType("int");

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("Pet_ID")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Submission_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdopterId");

                    b.HasIndex("PetId");

                    b.ToTable("AdoptionPreferenceSurvey");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adopter_ID = 1,
                            Answer = "Small-sized, friendly dog suitable for an apartment.",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 313, DateTimeKind.Utc).AddTicks(56),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 313, DateTimeKind.Utc).AddTicks(57),
                            Pet_ID = 1,
                            Question = "What type of pet are you looking for?",
                            Submission_Date = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Adopter_ID = 2,
                            Answer = "Prefer a playful and energetic cat.",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 313, DateTimeKind.Utc).AddTicks(60),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 313, DateTimeKind.Utc).AddTicks(60),
                            Pet_ID = 2,
                            Question = "Do you have any preferences for the pet's behavior or training?",
                            Submission_Date = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Adopter_ID = 3,
                            Answer = "Medium-sized dog with good health and obedience training.",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 313, DateTimeKind.Utc).AddTicks(62),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 313, DateTimeKind.Utc).AddTicks(63),
                            Pet_ID = 3,
                            Question = "Are there any specific characteristics you prefer?",
                            Submission_Date = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Group4FullSD.Domain.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Adopter_ID")
                        .HasColumnType("int");

                    b.Property<double>("Adoption_Cost")
                        .HasColumnType("float");

                    b.Property<string>("Adoption_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Approval_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Pet_ID")
                        .HasColumnType("int");

                    b.Property<int>("Staff_Reviewed_By")
                        .HasColumnType("int");

                    b.Property<DateTime>("Submission_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Adopter_ID");

                    b.HasIndex("Pet_ID");

                    b.HasIndex("Staff_Reviewed_By");

                    b.ToTable("Cost");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adopter_ID = 1,
                            Adoption_Cost = 150.0,
                            Adoption_Status = "Paid",
                            Approval_Date = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9422),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9422),
                            Pet_ID = 1,
                            Staff_Reviewed_By = 1,
                            Submission_Date = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Adopter_ID = 2,
                            Adoption_Cost = 200.0,
                            Adoption_Status = "Pending",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9426),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9426),
                            Pet_ID = 2,
                            Staff_Reviewed_By = 2,
                            Submission_Date = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Adopter_ID = 3,
                            Adoption_Cost = 120.0,
                            Adoption_Status = "Rejected",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9429),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9429),
                            Pet_ID = 3,
                            Staff_Reviewed_By = 3,
                            Submission_Date = new DateTime(2023, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Group4FullSD.Domain.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("Donation_Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Donation_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DonorId")
                        .HasColumnType("int");

                    b.Property<int>("Donor_ID")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("Location_ID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonorId");

                    b.HasIndex("LocationId");

                    b.ToTable("Donation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9963),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9963),
                            Donation_Amount = 100.0,
                            Donation_Date = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Donor_ID = 1,
                            Location_ID = 1,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9966),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9967),
                            Donation_Amount = 200.0,
                            Donation_Date = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Donor_ID = 2,
                            Location_ID = 2,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9969),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9969),
                            Donation_Amount = 50.0,
                            Donation_Date = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Donor_ID = 3,
                            Location_ID = 3,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Group4FullSD.Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street, Downtown",
                            Contact_Number = "123-456-7890",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8388),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8391),
                            Name = "Downtown Animal Shelter",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Uptown Avenue, Uptown",
                            Contact_Number = "987-654-3210",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8395),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8396),
                            Name = "Uptown Animal Shelter",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Suburban Road, Suburbia",
                            Contact_Number = "555-555-5555",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8398),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8399),
                            Name = "Suburban Animal Shelter",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Group4FullSD.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Adopter_ID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Order_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShopPetSuppliesId")
                        .HasColumnType("int");

                    b.Property<int>("Staff_ID")
                        .HasColumnType("int");

                    b.Property<int>("Supply_ID")
                        .HasColumnType("int");

                    b.Property<double>("Total_Price")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Adopter_ID");

                    b.HasIndex("ShopPetSuppliesId");

                    b.HasIndex("Staff_ID");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adopter_ID = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9100),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9101),
                            Order_Date = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Staff_ID = 1,
                            Supply_ID = 1,
                            Total_Price = 50.0,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Adopter_ID = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9104),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9105),
                            Order_Date = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Staff_ID = 2,
                            Supply_ID = 2,
                            Total_Price = 75.5,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Adopter_ID = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9107),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9108),
                            Order_Date = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Staff_ID = 3,
                            Supply_ID = 3,
                            Total_Price = 100.0,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Group4FullSD.Domain.PetTrainingProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("Pet_ID")
                        .HasColumnType("int");

                    b.Property<string>("Program_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trainer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("PetTrainingProgram");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9865),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9865),
                            End_Date = new DateTime(2023, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pet_ID = 1,
                            Program_Name = "Basic Obedience Training",
                            Start_Date = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed",
                            Trainer_Name = "John Doe",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9869),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9870),
                            End_Date = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pet_ID = 2,
                            Program_Name = "Agility Training",
                            Start_Date = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Ongoing",
                            Trainer_Name = "Jane Smith",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9872),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9873),
                            End_Date = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Pet_ID = 3,
                            Program_Name = "Socialization Program",
                            Start_Date = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed",
                            Trainer_Name = "Alice Johnson",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Group4FullSD.Domain.ShopPetSupplies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Location_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pricing")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Location_ID");

                    b.ToTable("ShopPetSupplies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Food",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8997),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8998),
                            Location_ID = 1,
                            Name = "Dog Food - Premium",
                            Pricing = 50.0,
                            Quantity = 100,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Toys",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9000),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9001),
                            Location_ID = 2,
                            Name = "Cat Toy - Feather Wand",
                            Pricing = 15.0,
                            Quantity = 50,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Accessories",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9003),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9004),
                            Location_ID = 3,
                            Name = "Aquarium Filter",
                            Pricing = 75.0,
                            Quantity = 25,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Group4FullSD.Domain.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Join_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Location_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Location_ID");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8651),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8651),
                            Email = "john.doe@example.com",
                            Join_Date = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location_ID = 1,
                            Name = "John Doe",
                            Phone_Number = "123-456-7890",
                            Role = "Manager",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8655),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8656),
                            Email = "jane.smith@example.com",
                            Join_Date = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location_ID = 2,
                            Name = "Jane Smith",
                            Phone_Number = "987-654-3210",
                            Role = "Veterinarian",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8659),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(8659),
                            Email = "alice.johnson@example.com",
                            Join_Date = new DateTime(2022, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location_ID = 3,
                            Name = "Alice Johnson",
                            Phone_Number = "555-555-5555",
                            Role = "Adoption Coordinator",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Group4FullSD.Domain.Volunteer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Assigned_Location_ID")
                        .HasColumnType("int");

                    b.Property<string>("Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registration_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Assigned_Location_ID");

                    b.ToTable("Volunteer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Assigned_Location_ID = 1,
                            Availability = "Weekends",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9212),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9213),
                            Email = "emily.brown@example.com",
                            Name = "Emily Brown",
                            Phone_Number = "123-456-7890",
                            Registration_Date = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Helper",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Assigned_Location_ID = 2,
                            Availability = "Full-time",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9216),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9217),
                            Email = "david.wilson@example.com",
                            Name = "David Wilson",
                            Phone_Number = "987-654-3210",
                            Registration_Date = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Coordinator",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Assigned_Location_ID = 3,
                            Availability = "Weekdays",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9219),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9220),
                            Email = "sophia.martinez@example.com",
                            Name = "Sophia Martinez",
                            Phone_Number = "555-555-5555",
                            Registration_Date = new DateTime(2023, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Assistant",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Group4FullSD.Domain.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Added_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Adopter_ID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Pet_ID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Adopter_ID");

                    b.HasIndex("Pet_ID");

                    b.ToTable("Wishlist");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Added_Date = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Adopter_ID = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9316),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9316),
                            Pet_ID = 1,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Added_Date = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Adopter_ID = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9319),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9319),
                            Pet_ID = 2,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Added_Date = new DateTime(2023, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Adopter_ID = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9321),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9322),
                            Pet_ID = 3,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adoption_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Health_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Location_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Personality_Traits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Location_ID");

                    b.ToTable("Pet");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adoption_Status = "Available",
                            Age = 3,
                            Breed = "Golden Retriever",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9663),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9664),
                            Gender = "Male",
                            Health_Status = "Healthy",
                            Location_ID = 1,
                            Name = "Buddy",
                            Personality_Traits = "Friendly, Playful",
                            Size = "Large",
                            Species = "Dog",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Adoption_Status = "Adopted",
                            Age = 2,
                            Breed = "Siamese",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9668),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9669),
                            Gender = "Female",
                            Health_Status = "Healthy",
                            Location_ID = 2,
                            Name = "Whiskers",
                            Personality_Traits = "Affectionate, Curious",
                            Size = "Small",
                            Species = "Cat",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Adoption_Status = "Pending",
                            Age = 4,
                            Breed = "Beagle",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9672),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9672),
                            Gender = "Male",
                            Health_Status = "Healthy",
                            Location_ID = 3,
                            Name = "Charlie",
                            Personality_Traits = "Energetic, Loyal",
                            Size = "Medium",
                            Species = "Dog",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("PetMedicalRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Last_Checkup_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Medical_Conditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medical_History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pet_ID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vaccination_Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Pet_ID")
                        .IsUnique();

                    b.ToTable("PetMedicalRecord");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9770),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9771),
                            Last_Checkup_Date = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medical_Conditions = "None",
                            Medical_History = "Routine vaccinations completed, no major issues.",
                            Pet_ID = 1,
                            UpdatedBy = "System",
                            Vaccination_Status = "Up-to-date"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9774),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9774),
                            Last_Checkup_Date = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medical_Conditions = "Allergies to certain foods",
                            Medical_History = "Routine checkups show minor food allergies.",
                            Pet_ID = 2,
                            UpdatedBy = "System",
                            Vaccination_Status = "Up-to-date"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9776),
                            DateUpdated = new DateTime(2025, 1, 20, 14, 20, 13, 312, DateTimeKind.Utc).AddTicks(9777),
                            Last_Checkup_Date = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medical_Conditions = "None",
                            Medical_History = "All vaccinations completed, healthy overall.",
                            Pet_ID = 3,
                            UpdatedBy = "System",
                            Vaccination_Status = "Up-to-date"
                        });
                });

            modelBuilder.Entity("Group4FullSD.Domain.AdoptionApplication", b =>
                {
                    b.HasOne("Group4FullSD.Domain.Adopter", "Adopter")
                        .WithMany("Applications")
                        .HasForeignKey("AdopterId");

                    b.HasOne("Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId");

                    b.HasOne("Group4FullSD.Domain.Staff", "ReviewedBy")
                        .WithMany("ApplicationsReviewed")
                        .HasForeignKey("ReviewedById");

                    b.Navigation("Adopter");

                    b.Navigation("Pet");

                    b.Navigation("ReviewedBy");
                });

            modelBuilder.Entity("Group4FullSD.Domain.AdoptionPreferenceSurvey", b =>
                {
                    b.HasOne("Group4FullSD.Domain.Adopter", "Adopter")
                        .WithMany()
                        .HasForeignKey("AdopterId");

                    b.HasOne("Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId");

                    b.Navigation("Adopter");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("Group4FullSD.Domain.Cost", b =>
                {
                    b.HasOne("Group4FullSD.Domain.Adopter", "Adopter")
                        .WithMany()
                        .HasForeignKey("Adopter_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("Pet_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Group4FullSD.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("Staff_Reviewed_By")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Adopter");

                    b.Navigation("Pet");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Group4FullSD.Domain.Donation", b =>
                {
                    b.HasOne("Group4FullSD.Domain.Adopter", "Donor")
                        .WithMany("Donations")
                        .HasForeignKey("DonorId");

                    b.HasOne("Group4FullSD.Domain.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Donor");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Group4FullSD.Domain.Order", b =>
                {
                    b.HasOne("Group4FullSD.Domain.Adopter", "Adopter")
                        .WithMany()
                        .HasForeignKey("Adopter_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Group4FullSD.Domain.ShopPetSupplies", "ShopPetSupplies")
                        .WithMany()
                        .HasForeignKey("ShopPetSuppliesId");

                    b.HasOne("Group4FullSD.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("Staff_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adopter");

                    b.Navigation("ShopPetSupplies");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Group4FullSD.Domain.PetTrainingProgram", b =>
                {
                    b.HasOne("Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("Group4FullSD.Domain.ShopPetSupplies", b =>
                {
                    b.HasOne("Group4FullSD.Domain.Location", "StockedAt")
                        .WithMany("ShopSupplies")
                        .HasForeignKey("Location_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StockedAt");
                });

            modelBuilder.Entity("Group4FullSD.Domain.Staff", b =>
                {
                    b.HasOne("Group4FullSD.Domain.Location", "Location")
                        .WithMany("StaffMembers")
                        .HasForeignKey("Location_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Group4FullSD.Domain.Volunteer", b =>
                {
                    b.HasOne("Group4FullSD.Domain.Location", "AssignedLocation")
                        .WithMany("Volunteers")
                        .HasForeignKey("Assigned_Location_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedLocation");
                });

            modelBuilder.Entity("Group4FullSD.Domain.Wishlist", b =>
                {
                    b.HasOne("Group4FullSD.Domain.Adopter", "Adopter")
                        .WithMany("Wishlists")
                        .HasForeignKey("Adopter_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("Pet_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adopter");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Group4FullSD.Data.Group4FullSDUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Group4FullSD.Data.Group4FullSDUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Group4FullSD.Data.Group4FullSDUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Group4FullSD.Data.Group4FullSDUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pet", b =>
                {
                    b.HasOne("Group4FullSD.Domain.Location", "Location")
                        .WithMany("Pets")
                        .HasForeignKey("Location_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("PetMedicalRecords", b =>
                {
                    b.HasOne("Pet", "Pet")
                        .WithOne("MedicalRecord")
                        .HasForeignKey("PetMedicalRecords", "Pet_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("Group4FullSD.Domain.Adopter", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Donations");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("Group4FullSD.Domain.Location", b =>
                {
                    b.Navigation("Pets");

                    b.Navigation("ShopSupplies");

                    b.Navigation("StaffMembers");

                    b.Navigation("Volunteers");
                });

            modelBuilder.Entity("Group4FullSD.Domain.Staff", b =>
                {
                    b.Navigation("ApplicationsReviewed");
                });

            modelBuilder.Entity("Pet", b =>
                {
                    b.Navigation("MedicalRecord");
                });
#pragma warning restore 612, 618
        }
    }
}
